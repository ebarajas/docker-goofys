##############################################################################
# template:     Dockerfile.template                                          #
# author:       james.hicks@pega.com                                         #
# description:  Dockerfile template that can be used as a starting point     #
#               for creating an installer container for various              #
#               Pega Cloud AMI Components                                    #
# version:      0.0.1                                                        #
# date:         2017.07.12                                                   #
##############################################################################

### use the most recent release of the AWS Linux AMI provided by AWS
#FROM alpine
#FROM golang:1.6.2-alpine
FROM debian:jessie

MAINTAINER Cole Whitley

### update all of the installed packages on the image
### this occurs at image build, not runtime.

#RUN apk update && apk add gcc ca-certificates openssl musl-dev git fuse

# add syslog-ng (syslog required by Goofys)
#RUN apk add syslog-ng

#RUN apk update
#RUN apk add fuse wget bash

RUN apt-get -y update && apt-get -y install fuse wget bash syslog-ng

RUN echo "@version: 3.7" > /etc/syslog-ng/syslog-ng.conf
RUN echo "source s_local {internal();network(transport("udp"));unix-dgram("/dev/log");};" >> /etc/syslog-ng/syslog-ng.conf
RUN echo "destination d_local {file("/var/log/messages");};" >> /etc/syslog-ng/syslog-ng.conf
RUN echo "log {source(s_local);destination(d_local);};" >> /etc/syslog-ng/syslog-ng.conf


ENV GOOFYS_VERSION v0.0.13

#ENV REGION us-east-1


### After talking w Rob
ENV MOUNT_DIR /mnt/s3
ENV S3_BUCKET ""
ENV S3_PATH ""
ENV AWS_ACCESS_KEY_ID ""
ENV AWS_SECRET_ACCESS_KEY ""
#ENV KMS_KEY_ARN ""
ENV GOOFYS_UID "0"
ENV GOOFYS_GID "0"
ENV STAT_CACHE_TTL 1m0s
ENV TYPE_CACHE_TTL 1m0s
ENV DIR_MODE 0500
ENV FILE_MODE 0500

RUN wget --no-check-certificate -O /usr/bin/goofys "https://github.com/kahing/goofys/releases/download/${GOOFYS_VERSION}/goofys"
RUN chmod +x /usr/bin/goofys
RUN mkdir -p ${MOUNT_DIR}

### set the working directory
WORKDIR .

#RUN mkdir .aws

COPY docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh

CMD run
ENTRYPOINT ["/docker-entrypoint.sh"]


